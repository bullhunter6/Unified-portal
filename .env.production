# ============================================
# PRODUCTION ENVIRONMENT CONFIGURATION
# ============================================
# Created: October 15, 2025
# This file contains all required environment variables for production deployment
# KEEP THIS FILE SECURE - DO NOT COMMIT TO GIT

# ============================================
# DATABASE CONFIGURATION
# ============================================

# ESG Database (Primary - Users, Auth, Articles, Alerts)
DATABASE_URL="postgresql://postgres:finvizier2023@esgarticles.cf4iaa2amdt3.me-central-1.rds.amazonaws.com:5432/postgres?sslmode=require"
ESG_DATABASE_URL="postgresql://postgres:finvizier2023@esgarticles.cf4iaa2amdt3.me-central-1.rds.amazonaws.com:5432/postgres?sslmode=require"

# Credit Database (Credit Articles, Methodologies)
CREDIT_DATABASE_URL="postgresql://postgres:finvizier2023@creditarticles.cf4iaa2amdt3.me-central-1.rds.amazonaws.com:5432/postgres?sslmode=require"

# Legacy Database Variables (for backward compatibility)
DB_USER=postgres
DB_PASSWORD=finvizier2023
DB_HOST=esgarticles.cf4iaa2amdt3.me-central-1.rds.amazonaws.com
DB_NAME=postgres
DB_PORT=5432

# ============================================
# NEXTAUTH CONFIGURATION
# ============================================

# Application URL - Using EC2 Public IP with Port 3000
# REPLACE 'YOUR_EC2_PUBLIC_IP' with your actual EC2 instance public IP
# Example: http://54.123.45.67:3000
NEXTAUTH_URL=http://YOUR_EC2_PUBLIC_IP:3000

# NextAuth Secret - Production secret
NEXTAUTH_SECRET=edce3d00265b2f00ea4326e13bc44ddeeaa18bf9ee0c812e7f084833f3194c15

# ============================================
# EMAIL CONFIGURATION (Gmail SMTP)
# ============================================

# Gmail SMTP Server
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587

# Gmail Credentials (App Password)
MAIL_USERNAME=news.ai.finviz@gmail.com
MAIL_PASSWORD=ndxu rpsr rcza opna
MAIL_FROM=news.ai.finviz@gmail.com

# Note: Gmail allows 500 emails/day on free accounts
# This is sufficient for your alert system

# ============================================
# CRON JOB SECURITY
# ============================================

# Cron Secret - Used to authenticate scheduled task endpoints
# This prevents unauthorized access to cron endpoints
CRON_SECRET=955b2042731cf483a27254922ff1449c7da6abcc6b49a648dfa927a6358ad267

# ============================================
# APPLICATION CONFIGURATION
# ============================================

# Node Environment
NODE_ENV=production

# Application Port (exposed on EC2)
PORT=3000

# Base URL for API routes and redirects
# REPLACE 'YOUR_EC2_PUBLIC_IP' with your actual EC2 instance public IP
APP_URL=http://YOUR_EC2_PUBLIC_IP:3000
NEXT_PUBLIC_BASE_URL=http://YOUR_EC2_PUBLIC_IP:3000

# ============================================
# PDFX CONFIGURATION
# ============================================

# PDF Storage Directory
# Local: .pdfx_store
# Production: /var/data/pdfx_store or cloud storage (S3)
PDFX_STORAGE_DIR=.pdfx_store

# OpenAI API Key (Required for PDF translation and AI features)
# IMPORTANT: Add your OpenAI API key here!
# Get it from: https://platform.openai.com/api-keys
OPENAI_API_KEY=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

# OpenAI Organization ID (Optional)
# OPENAI_ORG_ID=org-your-org-id

# ============================================
# OPTIONAL: AI SUMMARIZATION SERVICE
# ============================================

# Custom AI Service (Currently disabled)
CUSTOM_AI_URL=
CUSTOM_AI_KEY=

# ============================================
# OPTIONAL: MONITORING & ANALYTICS
# ============================================

# Sentry DSN (Error Tracking)
# Recommended for production monitoring
# NEXT_PUBLIC_SENTRY_DSN=https://your-sentry-dsn

# Google Analytics
# NEXT_PUBLIC_GA_ID=G-XXXXXXXXXX

# ============================================
# OPTIONAL: CLOUD STORAGE (AWS S3)
# ============================================

# AWS S3 Configuration (For file uploads)
# AWS_ACCESS_KEY_ID=your-access-key
# AWS_SECRET_ACCESS_KEY=your-secret-key
# AWS_REGION=me-central-1
# AWS_S3_BUCKET=your-bucket-name

# ============================================
# OPTIONAL: REDIS (Caching/Sessions)
# ============================================

# Redis URL (If using Redis for caching)
# REDIS_URL=redis://localhost:6379

# ============================================
# PRODUCTION DEPLOYMENT CHECKLIST
# ============================================

# Before deploying to production:
# [✓] Database URLs configured with AWS RDS endpoints
# [✓] Gmail SMTP configured with app password
# [✓] CRON_SECRET set for securing scheduled tasks
# [ ] NEXTAUTH_URL changed to production domain (https://your-domain.com)
# [ ] NEXTAUTH_SECRET regenerated for production
# [ ] APP_URL and NEXT_PUBLIC_BASE_URL changed to production domain
# [ ] NODE_ENV set to "production"
# [ ] OPENAI_API_KEY added for PDFX features
# [ ] PDFX_STORAGE_DIR configured for production (cloud storage recommended)
# [ ] Optional: Sentry DSN added for error monitoring
# [ ] Optional: Google Analytics ID added
# [ ] SSL certificates configured (Let's Encrypt/Certbot)
# [ ] Firewall rules configured on EC2
# [ ] AWS Security Groups configured (ports 22, 80, 443)
# [ ] Database backups enabled on RDS
# [ ] PM2 configured for process management

# ============================================
# QUICK DEPLOYMENT STEPS
# ============================================

# 1. Copy this file to your EC2 instance:
#    scp .env.production ubuntu@your-ec2-ip:/var/www/portal-v1.0.0/.env
#
# 2. Update production-specific values:
#    - NEXTAUTH_URL
#    - APP_URL
#    - NEXT_PUBLIC_BASE_URL
#    - OPENAI_API_KEY (if using PDFX)
#
# 3. Ensure proper permissions:
#    chmod 600 .env
#
# 4. Test the application:
#    cd /var/www/portal-v1.0.0/apps/web
#    pnpm build
#    pnpm start
